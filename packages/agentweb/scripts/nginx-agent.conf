# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=chat_limit:10m rate=300r/m;
limit_req_zone $binary_remote_addr zone=websocket_limit:10m rate=5r/m;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

server {
    listen 80;
    server_name webchat.withseren.com;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name webchat.withseren.com;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/webchat.withseren.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/webchat.withseren.com/privkey.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS (optional but recommended)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Let the application handle CORS completely
    # No CORS headers added by nginx to prevent duplicates

    # Connection limits
    limit_conn conn_limit_per_ip 10;

    # Handle preflight requests - forward to application
    location ~* \.(OPTIONS)$ {
        proxy_pass http://127.0.0.1:3019;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API endpoints with strict rate limiting
    location /api/ {
        # Rate limiting
        limit_req zone=api_limit burst=5 nodelay;
        limit_req_status 429;
        
        # Proxy to ElizaOS
        proxy_pass http://127.0.0.1:3019;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # Chat messaging endpoints with higher rate limits
    location /api/messaging/ {
        # Higher rate limit for chat
        limit_req zone=chat_limit burst=10 nodelay;
        limit_req_status 429;
        
        # Proxy to ElizaOS
        proxy_pass http://127.0.0.1:3019;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Longer timeouts for chat
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }

    # WebSocket connections for real-time chat
    location /socket.io/ {
        # Rate limiting for WebSocket connections
        limit_req zone=websocket_limit burst=2 nodelay;
        limit_req_status 429;
        
        # WebSocket proxy configuration
        proxy_pass http://127.0.0.1:3019;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific settings
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
        proxy_connect_timeout 60s;
    }

    # Health check endpoint (no rate limiting)
    location /health {
        proxy_pass http://127.0.0.1:3019;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        access_log off;
    }

    # Block common attack patterns
    location ~* \.(php|asp|aspx|jsp)$ {
        return 444;
    }
    
    location ~* /\.(git|svn|hg) {
        return 444;
    }
    
    location ~* /(wp-admin|wp-login|admin|phpmyadmin) {
        return 444;
    }

    # Logging
    access_log /var/log/nginx/webchat.withseren.com.access.log;
    error_log /var/log/nginx/webchat.withseren.com.error.log;
    
    # Custom error pages for rate limiting
    error_page 429 @rate_limit;
    location @rate_limit {
        add_header Content-Type application/json always;
        return 429 '{"error": "Rate limit exceeded. Please try again later.", "code": "RATE_LIMIT_EXCEEDED"}';
    }
}

# Optional: Separate server block for monitoring/admin (if needed)
server {
    listen 443 ssl http2;
    server_name admin.webchat.withseren.com;
    
    # Same SSL config as above
    ssl_certificate /etc/letsencrypt/live/webchat.withseren.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/webchat.withseren.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    
    # Restrict access to admin interface
    allow 127.0.0.1;
    allow 34.32.50.216;  # Server IP
    deny all;
    
    location / {
        proxy_pass http://127.0.0.1:3019;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}